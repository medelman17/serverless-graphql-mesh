Resources:
  LambdaHandlerRole86E44BA9:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - Fn::Join:
        - ''
        - - 'arn:'
          - Ref: AWS::Partition
          - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RouterStack/LambdaHandlerRole/Resource
  LambdaHandlerFunctionDC0E08AA:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-661099804654-us-west-2
        S3Key: f303173889369bf6f225d8a3977a1ab0833a3f50ebff01bef9fff04bad718a6c.zip
      Role:
        Fn::GetAtt:
        - LambdaHandlerRole86E44BA9
        - Arn
      Architectures:
      - arm64
      Handler: not.required
      Runtime: provided.al2
    DependsOn:
    - LambdaHandlerRole86E44BA9
    Metadata:
      aws:cdk:path: RouterStack/LambdaHandlerFunction/Resource
      aws:asset:path: /Users/michael/Documents/Code/CLion/serverless-graphql-mesh/entrypoints/router/assets/lambda.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  NewHttpApi3FA0C067:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      CorsConfiguration:
        AllowHeaders:
        - '*'
        AllowMethods:
        - GET
        - HEAD
        - OPTIONS
        - POST
        AllowOrigins:
        - '*'
        MaxAge: 864000
      Name: NewHttpApi
      ProtocolType: HTTP
    Metadata:
      aws:cdk:path: RouterStack/NewHttpApi/Resource
  NewHttpApiDefaultRouteRouterPermission5901FA8A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - LambdaHandlerFunctionDC0E08AA
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
        - ''
        - - 'arn:'
          - Ref: AWS::Partition
          - ':execute-api:us-west-2:661099804654:'
          - Ref: NewHttpApi3FA0C067
          - /*/*
    Metadata:
      aws:cdk:path: RouterStack/NewHttpApi/DefaultRoute/Router-Permission
  NewHttpApiDefaultRouteRouter4BE9A2DD:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: NewHttpApi3FA0C067
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
        - LambdaHandlerFunctionDC0E08AA
        - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: RouterStack/NewHttpApi/DefaultRoute/Router/Resource
  NewHttpApiDefaultRouteF1A1ACEE:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: NewHttpApi3FA0C067
      RouteKey: $default
      AuthorizationType: NONE
      Target:
        Fn::Join:
        - ''
        - - integrations/
          - Ref: NewHttpApiDefaultRouteRouter4BE9A2DD
    Metadata:
      aws:cdk:path: RouterStack/NewHttpApi/DefaultRoute/Resource
  NewHttpApiDefaultStageA6801175:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: NewHttpApi3FA0C067
      StageName: $default
      AutoDeploy: true
    Metadata:
      aws:cdk:path: RouterStack/NewHttpApi/DefaultStage/Resource
  NewHttpApiDefaultStageRouterStackDNrouter4EC1413B:
    Type: AWS::ApiGatewayV2::ApiMapping
    Properties:
      ApiId:
        Ref: NewHttpApi3FA0C067
      DomainName: mesh.ocrateris.cloud
      Stage: $default
      ApiMappingKey: router
    DependsOn:
    - NewHttpApiDefaultStageA6801175
    Metadata:
      aws:cdk:path: RouterStack/NewHttpApi/DefaultStage/RouterStack--DNrouter/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1VP0WrDMAz8lr47atrC2OPawdgeBiP7gKI6XqYmcUwktwzjf5+dZJA93Z0k35338Aih3OCdC123RUcXCJ+CulVpdA6EPYRq6Ix6/rIZo+qwv9QI4cVbLTTYvFnzDzP2xJxUVHw4I7MRhmOGpOHkdWvkhGwUOmpQzB1/bnsI6enRUXZ4s2KaEf8Mq8HLlJ96NRNJd+/oHNkmRjU551WSqjI8+FHPdRceVVlg574Rys3T8tFtxnX+chFeRVyukXEOzmzdKOu5yb8adqgNXHl72z3A7pCirkxUjN4K9QaqGX8B8Fyk9m4BAAA=
    Metadata:
      aws:cdk:path: RouterStack/CDKMetadata/Default
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
    - Assert:
        Fn::Not:
        - Fn::Contains:
          - - '1'
            - '2'
            - '3'
            - '4'
            - '5'
          - Ref: BootstrapVersion
      AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
        with a recent version of the CDK CLI.
